package calculator;import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.util.*;import javax.swing.border.Border;public class Calculator implements ActionListener {    public static boolean isOp(char c) {        return (c == '+' || c == '-' || c == '*' || c == '/' || c == '(' || c == ')' || c == '.');    }    public static boolean isDigit(char c) {        boolean b1 = false;        if (c == '~') {            b1 = true;        }        if (c >= '0' && c <= '9') {            b1 = true;        }        return b1;    }    public static int getPrio(char c) {        return switch (c) {            case '+' ->                1;            case '-' ->                1;            case '*' ->                2;            case '/' ->                2;            case '(' ->                3;            case ')' ->                3;            default ->                -1;        };    }    public static float operate(float val1, float val2, float op) {        if (op == '+') {            return (val1 + val2);        }        if (op == '-') {            return (val1 - val2);        }        if (op == '*') {            return (val1 * val2);        }        if (op == '/') {            return val1 / val2;        } else {            return -1;        }    }    public static float evaluate2(String s) {        Stack<Float> vals = new Stack<>();        Stack<Character> ops = new Stack<>();        float val = 0;        int pos = 0;        char[] ch = new char[s.length()];        for (int i = 0; i < s.length(); i++) {            ch[i] = s.charAt(i);        }        while (pos < s.length()) {            char spot = ch[pos];            if (isDigit(spot)) {                if (spot == '~') {                    val = val * -1;                } else {                    val = (val * 10) + (float) (spot - '0');                }            } else if (isOp(spot)) {                if (spot == '.') {                    pos++;                    spot = ch[pos];                    while (isDigit(spot)) {                        val = val + (float) ((spot - '0') * 0.1);                        pos++;                        if (pos == (s.length())) {                            break;                        }                        spot = ch[pos];                    }                    pos--;                } else if (spot == '(') {                    ops.push(spot);                    val = 0;                } else if (vals.isEmpty()) {                    vals.push(val);                    ops.push(spot);                    val = 0;                } else if (spot == ')') {                    vals.push(val);                    while (ops.peek() != '(') {                        spot = ops.pop();                        val = vals.pop();                        float prev = vals.pop();                        val = operate(prev, val, spot);                        vals.push(val);                    }                    ops.pop();                    vals.pop(); //fk this took a while                } else {                    char prev = ops.peek();                    if (getPrio(spot) > getPrio(prev)) {                        vals.push(val);                        ops.push(spot);                        val = 0;                    } else //finally you get to do the work xd                    {                        float preval = vals.pop();                        char preop = ops.pop();                        preval = operate(preval, val, preop);                        vals.push(preval);                        ops.push(spot);                        val = 0;                    }                }            }            pos++;        }        while (!ops.isEmpty()) {            float prev = vals.pop();            char spot = ops.pop();            val = operate(prev, val, spot);        }        return val;    }    JFrame frame;    JTextField textfield;    JButton[] numberBUttons = new JButton[10];    JButton[] functionbutton = new JButton[9];    JButton addbutton, subbutton, multibutton, divbutton;    JButton decbutton, equbutton, delbutton, clrbtton, negbutton;    JPanel panel1, panel2, panel3;    ImageIcon image1, image2, image3;    Font myFont = new Font("Arial Narrow", Font.BOLD, 30);    double num1 = 0, num2 = 0, result = 0;    char operator;    Calculator() {        frame = new JFrame("calculator");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(370, 330);        frame.setLayout(null);        Color color1 = new Color(177, 186, 225);        image1 = new ImageIcon("D:\\icons\\24.png");        image2 = new ImageIcon("D:\\icons\\155.png");        image3 = new ImageIcon("D:\\icons\\index.png");        frame.setIconImage(image3.getImage());        textfield = new JTextField();        textfield.setFont(myFont);        textfield.setDisabledTextColor(Color.BLACK);        textfield.setBackground(color1);        textfield.setBounds(10, 10, 330, 60);        textfield.setEnabled(false);        addbutton = new JButton("+");        subbutton = new JButton("-");        multibutton = new JButton("*");        divbutton = new JButton("/");        decbutton = new JButton(".");        equbutton = new JButton("=");        delbutton = new JButton(image2);        clrbtton = new JButton("C");        negbutton = new JButton(image1);        functionbutton[0] = addbutton;        functionbutton[1] = subbutton;        functionbutton[2] = multibutton;        functionbutton[3] = divbutton;        functionbutton[4] = decbutton;        functionbutton[5] = equbutton;        functionbutton[6] = delbutton;        functionbutton[7] = clrbtton;        functionbutton[8] = negbutton;        for (int i = 0; i < 9; i++) {            functionbutton[i].addActionListener(this);            functionbutton[i].setFont(myFont);            functionbutton[i].setFocusable(false);            functionbutton[i].setBackground(Color.lightGray);        }        for (int i = 0; i < 10; i++) {            numberBUttons[i] = new JButton(String.valueOf(i));            numberBUttons[i].addActionListener(this);            numberBUttons[i].setFont(myFont);            numberBUttons[i].setFocusable(false);            numberBUttons[i].setBackground(Color.lightGray);        }        panel1 = new JPanel();        panel1.setLayout(new GridLayout(3, 5, 5, 15));        panel1.setBounds(10, 90, 330, 130);        numberBUttons[8].setBounds(10, 245, 62, 33);        numberBUttons[9].setBounds(77, 245, 62, 33);        equbutton.setBounds(144, 245, 129, 33);        divbutton.setBounds(278, 245, 62, 33);        frame.add(textfield);        panel1.add(delbutton);        panel1.add(clrbtton);        panel1.add(negbutton);        panel1.add(decbutton);        panel1.add(addbutton);        panel1.add(numberBUttons[0]);        panel1.add(numberBUttons[1]);        panel1.add(numberBUttons[2]);        panel1.add(numberBUttons[3]);        panel1.add(subbutton);        panel1.add(numberBUttons[4]);        panel1.add(numberBUttons[5]);        panel1.add(numberBUttons[6]);        panel1.add(numberBUttons[7]);        panel1.add(multibutton);        frame.add(numberBUttons[8]);        frame.add(numberBUttons[9]);        frame.add(equbutton);        frame.add(divbutton);        frame.add(panel1);        frame.setVisible(true);    }    public static void main(String[] args) {        Calculator calc = new Calculator();    }    @Override    public void actionPerformed(ActionEvent e) {        for (int i = 0; i < 10; i++) {            if (e.getSource() == numberBUttons[i]) {                textfield.setText(textfield.getText().concat(String.valueOf(i)));            }        }        if (e.getSource() == decbutton) {            decbutton.setEnabled(false);            textfield.setText(textfield.getText() + '.');        } else if (e.getSource() == addbutton) {            decbutton.setEnabled(true);            textfield.setText(textfield.getText() + "+");        } else if (e.getSource() == subbutton) {            decbutton.setEnabled(true);            textfield.setText(textfield.getText() + "-");        } else if (e.getSource() == multibutton) {            decbutton.setEnabled(true);            textfield.setText(textfield.getText() + "*");        } else if (e.getSource() == divbutton) {            decbutton.setEnabled(true);            textfield.setText(textfield.getText() + "/");        } else if (e.getSource() == equbutton) {            decbutton.setEnabled(true);            String equation;            equation = textfield.getText();            float aswer = evaluate2(equation);            String w = String.valueOf(evaluate2(equation));            textfield.setText(w);        } else if (e.getSource() == clrbtton) {            decbutton.setEnabled(true);            textfield.setText("");        } else if (e.getSource() == delbutton) {            String string = textfield.getText();            textfield.setText("");            int j = 0;            for (int i = 0; i < string.length() - 1; i++) {                textfield.setText(textfield.getText() + string.charAt(i));                j++;            }            if (string.charAt(j) == '.') {                decbutton.setEnabled(true);            }        } else if (e.getSource() == negbutton) {            textfield.setText(textfield.getText() + "~");        }    }}